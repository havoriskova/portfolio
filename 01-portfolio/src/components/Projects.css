


.project.container {
    display: flex;
    justify-content: space-between;
    flex-direction: column;
    gap: 2rem;
    /* padding-bottom: 1rem; */
    position: relative;
}

.project h3 {
    text-transform: uppercase;
    font-weight: 100;
    margin: 1rem 0;
}

.projects-hr {
    border-bottom: solid rgb(229, 229, 229) .1rem;
    width: 80%;
    /* position: absolute; */
    /* bottom: 0; */
    /* left: 50%;
    transform: translateX(-50%); */
    margin: 0 auto;
    border-image-slice: 1;
    border-image-source: linear-gradient(to left, var(--darkest-color), var(--light-color));

}

.projectsLink {
    background: linear-gradient(to left, var(--darkest-color), var(--light-color));
    border: solid rgb(229, 229, 229) .1rem;
    border-image-slice: 1;
    border-image-source: linear-gradient(to left, var(--darkest-color), var(--light-color));
    display: inline-block;
    padding: .5rem .3rem;
    margin: 2rem 0 1rem;
    position: relative;
    color: var(--primary-color);
    font-weight: 600;

}

.projectsLink:nth-of-type(2n) {
    padding-left: 3rem;
    margin-left: .5rem;
    background: transparent;
    color: var(--text-color);
}

.projectsLink:hover {
    filter: brightness(80%);
}

.projectsGithubLogo {
    height: 1.5rem;
    /* padding-right: 1rem; */
    filter: invert(90%);
    position: absolute;
    top: .3rem;
    left: .7rem;
}

.project_photo_phone_width {
    margin: 3rem 0;
    padding: 0 1rem;
}

.project_photo_phone_width img {
  max-width: 100%;
}



.col-2 {
 display: none;
}

@media (min-width: 330px) {
    .projectsLink {
        padding: .5rem .6rem;
    }

    .projectsLink:nth-of-type(2n) {
        margin-left: .8rem;
    }
}

@media (min-width: 1000px) {

    .project.container {
        flex-direction: row;
        padding-bottom: 3rem;
    
    }

    .project.container:nth-of-type(2n) .col-1 {
        order: 2;
    }

    
    .projects-hr {
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
    }

    .col-1 {
        flex: 1 1 50%;
    }
    
    .col-2 {
        display: block;
        margin-top: 2rem; /*zavisle na '[class*="constellation_header"] img' */
        flex: 1 1 50%;
        padding: 2rem 0 2rem 2rem;
        position: relative;
        max-height: 100%;
    }


    .col-2 .desktop-pictures-container {
       width: 100%;
      height: 100%;
      position: relative;
    }

    .col-2 .desktop-pictures-container img {
      /* height: 100%; */
      width: 100%;
      /* object-fit: cover; */
      /* box-shadow: 1rem 1rem var(--primary-color), 1.2rem 1.2rem var(--dark-color); */
    }

    .col-2 .desktop-pictures-container::after {
      display: inline-block;
      width: 100%;
      position: absolute;
      left: 1rem;
      top: 1rem;
      aspect-ratio: 4/3;
      content: '';
      border: solid rgb(229, 229, 229) .1rem;
      border-image-slice: 1;
      border-image-source: linear-gradient(to left, var(--darkest-color), var(--light-color));
      z-index: -1;
    }


    .projectsLink {
        padding: .5rem 1rem;
        margin: 2.5rem 1rem 1rem;
    }

    .project_photo_phone_width {
        display: none;
    }

}



/*------------------blob----------------*/

.Blob.frame {
    --blob-primary: var(--light-color);
    --blob-secondary: var(--dark-color);
    display: grid;
    place-items: center;
    animation: blob-background-color 10s cubic-bezier(0.15, -0.93, 0.84, 1.64)
      infinite alternate;
    aspect-ratio: 1 / 1;
    border-radius: 5%;
    overflow: hidden;
    box-shadow: 0.1rem 0.2rem 0.5rem 0 rgba(0 0 0 / 0.1);
    position: relative;
  }
  
  .Blob .center {
    width: 30%;
    height: 30%;
    /*   background: blue; */
    position: relative;
  }
  
  .Blob .circle,
  .Blob .octagon,
  .Blob .triangle,
  .Blob .circle2 {
    width: 100%;
    height: 100%;
    position: absolute;
    background: var(--blob-secondary);
    /*  animation-duration: 10s; - nejde mi to nastavit pro všechny tady jednotně */
  }
  
  .Blob .circle {
    border-radius: 50%;
    /* background: red;
    z-index: 100; */
    animation: blob-circle 10s infinite ease-in-out;
  }
  
  .Blob .octagon {
    clip-path: polygon(
      30% 0%,
      70% 0%,
      100% 30%,
      100% 70%,
      70% 100%,
      30% 100%,
      0% 70%,
      0% 30%
    );
    animation: blob-octagon 10s infinite ease-in-out;
  }
  
  .Blob .triangle {
    clip-path: polygon(0% 100%, 100% 100%, 50% 0%);
    animation: blob-triangle 10s infinite cubic-bezier(0.5, 0.1, 0.5, 2);
  }
  
  .Blob .circle2 {
    border-radius: 50%;
    /*background: red;
    z-index: 100; */
    animation: blob-circle2 10s infinite ease-in-out;
  }
  
  .Blob .kruh {
    background: transparent;
    position: absolute;
    height: 150%;
    width: 150%;
    border-radius: 50%;
    transform-origin: 50% 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border: solid 6px var(--blob-secondary);
    box-shadow: inset 0 0 10px 10px var(--blob-secondary);
    opacity: 0;
    animation: blob-kruh 10s ease-in-out infinite;
  }
  
  .Blob .containery-pro-konfety * {
    background: red;
    position: absolute;
    width: 6px;
    height: 100px;
    top: 50%;
    left: 50%;
    transform-origin: 50% top;
    transform: translateX(-50%) translateY(60px);
    z-index: 100;
    border-radius: 4px;
  }
  
  .Blob .k-octa * {
    background: rgba(200, 200, 200, 0.01);
    z-index: 200;
    overflow: hidden;
  }
  
  .Blob .k-octa *::after {
    /*tohle jsou až ty konfety, co se animací dostanou z jednoho konce svýho parent elementu na druhej konec díky translateY*/
    background: var(--blob-secondary);
    width: 100%;
    height: 50%;
    content: "";
    z-index: 400;
    position: absolute;
    animation: blob-octa-k 10s infinite ease-in-out;
    transform: translateY(-100%); /*-100% a 250% jsou mimo*/
    border-radius: 5px;
    box-shadow: 0 0 10px 3px var(--blob-secondary);
  }
  
  .Blob .k-trouh * {
    background: rgba(200, 200, 200, 0.001);
    z-index: 300;
    overflow: hidden;
  }
  
  .Blob .k-trouh *::after {
    /*tohle jsou až ty konfety, co se animací dostanou z jednoho konce svýho parent elementu na druhej konec díky translateY*/
    background: var(--blob-secondary);
    width: 100%;
    height: 50%;
    content: "";
    z-index: 400;
    position: absolute;
    border-radius: 5px;
    box-shadow: 0 0 10px 3px var(--blob-secondary);
    animation: blob-trouh-k 10s infinite ease-in-out forwards;
  }
  
  .Blob .container-pro-konfeta-o1 {
    /*důležité pořadí! nejprv rotace, a až pak přesunutí na ose Y*/
    transform: translateX(-50%) rotate(calc(180deg / 4)) translateY(60px);
  }
  
  .Blob .container-pro-konfeta-o2 {
    transform: translateX(-50%) rotate(calc(180deg / 2)) translateY(60px);
  }
  
  .Blob .container-pro-konfeta-o3 {
    transform: translateX(-50%) rotate(calc(180deg / 1.33)) translateY(60px);
  }
  
  .Blob .container-pro-konfeta-o4 {
    transform: translateX(-50%) rotate(calc(180deg)) translateY(60px);
  }
  
  .Blob .container-pro-konfeta-o5 {
    transform: translateX(-50%) rotate(calc(180deg * 1.25)) translateY(60px);
  }
  
  .Blob .container-pro-konfeta-o6 {
    transform: translateX(-50%) rotate(calc(180deg * 1.5)) translateY(60px);
  }
  
  .Blob .container-pro-konfeta-o7 {
    transform: translateX(-50%) rotate(calc(180deg * 1.75)) translateY(60px);
  }
  
  .Blob .container-pro-konfeta-t1 {
    transform: translateX(-50%) rotate(calc(180deg * 1.75)) translateY(60px);
  }
  
  .Blob .container-pro-konfeta-t2 {
    transform: translateX(-50%) rotate(calc(180deg / 4)) translateY(60px);
  }
  
  .Blob .container-pro-konfeta-t3 {
    transform: translateX(-50%) rotate(180deg) translateY(60px);
  }
  
  .Blob .card:hover .center * {
    animation-play-state: paused; /*MUHAHAHAHAHAHA*/
  }
  
  .Blob .card:hover {
    background: #fcd1d1;
  }
  
  @keyframes blob-circle {
    0% {
      opacity: 1;
      transform: translateY(-220%) scale(1) scaleY(1.1);
    }
    8% {
      transform: translateY(70%) scaleY(0.5);
    }
    15% {
      transform: translateY(-40%) scale(1);
    }
    20% {
      transform: translateY(0) scale(1);
    }
    25% {
      transform: scale(1.3);
    }
    30%,
    100% {
      opacity: 1;
      transform: scale(0.001);
    }
  }
  
  @keyframes blob-octagon {
    0%,
    30% {
      opacity: 1;
      transform: scale(0.001) rotate(0);
    }
    35%,
    38% {
      transform: scale(1) rotate(67deg);
    }
    39% {
      transform: scale(0.9) rotate(67deg);
    }
    42% {
      transform: scale(1.5) rotate(67deg);
    } /*tady vytrysknou konfety*/
    44% {
      transform: scale(1) rotate(67deg);
    }
    50%,
    100% {
      opacity: 1;
      transform: rotate(0) scale(0.001);
    }
  }
  
  @keyframes blob-octa-k {
    0%,
    38% {
      opacity: 0;
      transform: translateY(-100%);
    }
    45% {
      opacity: 1;
      transform: translateY(185%);
    }
    55%,
    100% {
      opacity: 0;
      transform: translateY(185%);
    }
  }
  
  @keyframes blob-triangle {
    0%,
    50% {
      opacity: 1;
      transform: scale(0);
    }
    57% {
      transform: scale(1.3);
    } /*tady vytrysknou konfety*/
    60% {
      transform: scale(0.8);
    }
    70%,
    100% {
      opacity: 1;
      transform: scale(0);
    }
  }
  
  @keyframes blob-trouh-k {
    0%,
    48% {
      opacity: 0;
      transform: translateY(-100%);
    }
    60% {
      opacity: 1;
      transform: translateY(185%);
    }
    70%,
    100% {
      opacity: 0;
      transform: translateY(185%);
    }
  }
  
  @keyframes blob-circle2 {
    0%,
    70% {
      opacity: 1;
      transform: scale(0);
    }
    75% {
      transform: scale(1);
    }
    78% {
      transform: scale(0.9);
    }
    80% {
      transform: scale(1.3);
    } /*tady vytryskne kruh*/
    83% {
      transform: scale(1);
    }
    91% {
      transform: scaleY(0.8) translateY(-50%);
    }
    99%,
    100% {
      opacity: 1;
      transform: translateY(220%);
    }
  }
  
  @keyframes blob-kruh {
    0%,
    78% {
      opacity: 0;
      transform: translate(-50%, -50%) scale(1);
    }
    80% {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1.5);
    }
    83% {
      opacity: 1;
      transform: translate(-50%, -50%) scale(1);
    }
    85%,
    100% {
      opacity: 0;
      transform: translate(-50%, -50%) scale(1.7);
    }
  }
  
  @keyframes blob-background-color {
    from {
      background: var(--blob-primary);
    }
    to {
      background: var(--darkest-color);
    }
  }
  